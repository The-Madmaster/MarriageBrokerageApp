# application.properties
spring.application.name=Marriage Bureau Software

server.port=8080
server.address=0.0.0.0
# --- Spring Security Configuration (for development) ---
# Set a default username and password for basic security
spring.security.user.name=admin
spring.security.user.password=admin@33311333
spring.security.user.roles=ADMIN
# --- Database Configuration (for MySQL) ---
# This tells Spring Boot how to find and connect to your MySQL database
# Use 'mysql' as the hostname because that's the service name in docker-compose.yml
#spring.datasource.url=jdbc:mysql://mysql:3306/marriage_bureau_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.username=springuser           
#spring.datasource.password=Mahispring@33311333  
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# Test-specific configuration to use H2 in-memory database
spring.datasource.url=jdbc:h2:mem:testdb;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.hibernate.ddl-auto=create # 'create' is often used for tests to ensure clean state
spring.jpa.show-sql=false # Turn off SQL logging for cleaner test output
# --- JPA/Hibernate Configuration ---
# 'update' will create tables if they don't exist and update schema (great for development)
# 'create' will drop and recreate tables on every startup (use with caution!)
# 'none' means no automatic schema actions
spring.jpa.hibernate.ddl-auto=update 

spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
app.jwt-secret=v#7wV8Jk$F^m9Lp3@RzG1HcX0!BnTqYuWkEs4MaDz2CiNjPqX
app.jwt-expiration-milliseconds=604800000 
# 7 days in milliseconds (7 * 24 * 60 * 60 * 1000)